type(u'competence', u'Competence', viewName=u'', 
    typeInterface=u'', options=u'action.portlet:edit_concept')
type(u'person', u'Person', viewName=u'', 
    typeInterface=u'loops.knowledge.interfaces.IPerson', 
    options=u'action.portlet:editPerson')
type(u'task', u'Aufgabe', viewName=u'', 
    typeInterface=u'loops.knowledge.interfaces.ITask', 
    options=u'action.portlet:createTopic,editTopic')
type(u'topic', u'Thema', viewName=u'', 
    typeInterface=u'loops.knowledge.interfaces.ITopic', 
    options=u'action.portlet:createTopic,editTopic')
type(u'training', u'Schulung', viewName=u'', 
    typeInterface=u'loops.organize.interfaces.ITask', 
    options=u'action.portlet:create_subtype,edit_concept')

concept(u'general', u'Allgemein', u'domain')
concept(u'system', u'System', u'domain')

# predicates
concept(u'depends', u'depends', u'predicate')
concept(u'knows', u'knows', u'predicate')
concept(u'provides', u'provides', u'predicate')
concept(u'requires', u'requires', u'predicate')

concept(u'issubtype', u'is Subtype', u'predicate', options=u'hide_children',
    predicateInterface='loops.interfaces.IIsSubtype')

# structure
child(u'competence', u'general', u'standard')
child(u'depends', u'general', u'standard')
child(u'knows', u'general', u'standard')
child(u'person', u'general', u'standard')
child(u'provides', u'general', u'standard')
child(u'requires', u'general', u'standard')
child(u'task', u'general', u'standard')
child(u'topic', u'general', u'standard')
child(u'training', u'general', u'standard')

child(u'issubtype', u'system', u'standard')

child(u'training', u'competence', u'issubtype', usePredicate=u'provides')

# records
records(u'qualification', u'loops.knowledge.qualification.QualificationRecord')
